{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'func1', 'func2']\n",
      "2406399195808\n",
      "Func2 called\n",
      "Func1 caleed\n",
      "Func2 called\n",
      "1\n",
      "1\n",
      "Lee\n",
      "Cho\n",
      "{'name': 'Lee'}\n",
      "{'name': 'Cho'}\n",
      "before {'__module__': '__main__', 'stock_num': 1, '__init__': <function Warehouse.__init__ at 0x00000230494EE3E0>, '__del__': <function Warehouse.__del__ at 0x00000230494EE160>, '__dict__': <attribute '__dict__' of 'Warehouse' objects>, '__weakref__': <attribute '__weakref__' of 'Warehouse' objects>, '__doc__': None}\n",
      ">>> 1\n",
      "after {'__module__': '__main__', 'stock_num': 0, '__init__': <function Warehouse.__init__ at 0x00000230494EE3E0>, '__del__': <function Warehouse.__del__ at 0x00000230494EE160>, '__dict__': <attribute '__dict__' of 'Warehouse' objects>, '__weakref__': <attribute '__weakref__' of 'Warehouse' objects>, '__doc__': None}\n",
      "july is 4 years old\n",
      "Marry is 10 years old\n",
      "july says Wal Wal!\n",
      "Marry says Mung Mung!\n"
     ]
    }
   ],
   "source": [
    "# 예제2\n",
    "\n",
    "# self의 이해\n",
    "class SelfTest:\n",
    "    def func1():\n",
    "        print('Func1 caleed')\n",
    "    def func2(self):\n",
    "        print('Func2 called')\n",
    "\n",
    "f = SelfTest()\n",
    "\n",
    "print(dir(f))\n",
    "print(id(f))\n",
    "#f.func1() # 예외\n",
    "f.func2()\n",
    "\n",
    "SelfTest.func1()\n",
    "SelfTest.func2(f)\n",
    "\n",
    "# 예제3\n",
    "# 클래스변수, 인스턴스 변수\n",
    "class Warehouse:\n",
    "    #클래스변수\n",
    "    stock_num = 0# 재고\n",
    "\n",
    "    def __init__(self,name):\n",
    "        # 인스턴스 변수\n",
    "        self.name = name\n",
    "        Warehouse.stock_num += 1\n",
    "\n",
    "    def __del__(self):\n",
    "        Warehouse.stock_num -= 1\n",
    "\n",
    "\n",
    "user1 = Warehouse('Lee')\n",
    "user2 = Warehouse('Cho')\n",
    "\n",
    "print(Warehouse.stock_num)\n",
    "\n",
    "\n",
    "print(Warehouse.stock_num)\n",
    "# Warehouse.stock_num = 0.0094\n",
    "print(user1.name)\n",
    "print(user2.name)\n",
    "print(user1.__dict__)\n",
    "print(user2.__dict__)\n",
    "print('before', Warehouse.__dict__)\n",
    "print('>>>', user1.stock_num)\n",
    "\n",
    "del user1\n",
    "print('after', Warehouse.__dict__)\n",
    "\n",
    "\n",
    "# 예제4\n",
    "class Dog: # object 상속\n",
    "    # 클래스 속성\n",
    "    species = 'firstdog'\n",
    "    \n",
    "    # 초기화/인스턴스 속성\n",
    "    def __init__(self, name, age):\n",
    "        self.name = name\n",
    "        self.age = age\n",
    "   \n",
    "    def info(self):\n",
    "        return '{} is {} years old'.format(self.name, self.age)\n",
    "        \n",
    "    def speak(self, sound):\n",
    "        return \"{} says {}!\".format(self.name, sound)\n",
    "    \n",
    "# 인스턴스 생성\n",
    "c = Dog('july', 4)\n",
    "d = Dog('Marry', 10)\n",
    "\n",
    "# 메소드 호출\n",
    "print(c.info())\n",
    "print(d.info())\n",
    "# 메소드 호출\n",
    "print(c.speak('Wal Wal'))\n",
    "print(d.speak('Mung Mung'))\n",
    "\n",
    "\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
